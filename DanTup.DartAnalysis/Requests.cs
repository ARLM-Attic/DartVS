// Code generated by UpdateJson.fsx. Do not hand-edit!

using DanTup.DartAnalysis.Json;

namespace DanTup.DartAnalysis
{
	[AnalysisMethod("servergetVersion")]
	public class ServerGetVersion : Request<Response<ServerGetVersionResponse>>
	{

	}

	[AnalysisMethod("servershutdown")]
	public class ServerShutdown : Request<Response>
	{

	}

	[AnalysisMethod("serversetSubscriptions")]
	public class ServerSetSubscriptions : Request<ServerSetSubscriptionsRequest, Response>
	{
		public ServerSetSubscriptions(ServerSetSubscriptionsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysisgetErrors")]
	public class AnalysisGetErrors : Request<AnalysisGetErrorsRequest, Response<AnalysisGetErrorsResponse>>
	{
		public AnalysisGetErrors(AnalysisGetErrorsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysisgetHover")]
	public class AnalysisGetHover : Request<AnalysisGetHoverRequest, Response<AnalysisGetHoverResponse>>
	{
		public AnalysisGetHover(AnalysisGetHoverRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysisreanalyze")]
	public class AnalysisReanalyze : Request<Response>
	{

	}

	[AnalysisMethod("analysissetAnalysisRoots")]
	public class AnalysisSetAnalysisRoots : Request<AnalysisSetAnalysisRootsRequest, Response>
	{
		public AnalysisSetAnalysisRoots(AnalysisSetAnalysisRootsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysissetPriorityFiles")]
	public class AnalysisSetPriorityFiles : Request<AnalysisSetPriorityFilesRequest, Response>
	{
		public AnalysisSetPriorityFiles(AnalysisSetPriorityFilesRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysissetSubscriptions")]
	public class AnalysisSetSubscriptions : Request<AnalysisSetSubscriptionsRequest, Response>
	{
		public AnalysisSetSubscriptions(AnalysisSetSubscriptionsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysisupdateContent")]
	public class AnalysisUpdateContent : Request<AnalysisUpdateContentRequest, Response>
	{
		public AnalysisUpdateContent(AnalysisUpdateContentRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysisupdateOptions")]
	public class AnalysisUpdateOptions : Request<AnalysisUpdateOptionsRequest, Response>
	{
		public AnalysisUpdateOptions(AnalysisUpdateOptionsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("completiongetSuggestions")]
	public class CompletionGetSuggestions : Request<CompletionGetSuggestionsRequest, Response<CompletionGetSuggestionsResponse>>
	{
		public CompletionGetSuggestions(CompletionGetSuggestionsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("searchfindElementReferences")]
	public class SearchFindElementReferences : Request<SearchFindElementReferencesRequest, Response<SearchFindElementReferencesResponse>>
	{
		public SearchFindElementReferences(SearchFindElementReferencesRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("searchfindMemberDeclarations")]
	public class SearchFindMemberDeclarations : Request<SearchFindMemberDeclarationsRequest, Response<SearchFindMemberDeclarationsResponse>>
	{
		public SearchFindMemberDeclarations(SearchFindMemberDeclarationsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("searchfindMemberReferences")]
	public class SearchFindMemberReferences : Request<SearchFindMemberReferencesRequest, Response<SearchFindMemberReferencesResponse>>
	{
		public SearchFindMemberReferences(SearchFindMemberReferencesRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("searchfindTopLevelDeclarations")]
	public class SearchFindTopLevelDeclarations : Request<SearchFindTopLevelDeclarationsRequest, Response<SearchFindTopLevelDeclarationsResponse>>
	{
		public SearchFindTopLevelDeclarations(SearchFindTopLevelDeclarationsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("searchgetTypeHierarchy")]
	public class SearchGetTypeHierarchy : Request<SearchGetTypeHierarchyRequest, Response<SearchGetTypeHierarchyResponse>>
	{
		public SearchGetTypeHierarchy(SearchGetTypeHierarchyRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("editgetAssists")]
	public class EditGetAssists : Request<EditGetAssistsRequest, Response<EditGetAssistsResponse>>
	{
		public EditGetAssists(EditGetAssistsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("editgetAvailableRefactorings")]
	public class EditGetAvailableRefactorings : Request<EditGetAvailableRefactoringsRequest, Response<EditGetAvailableRefactoringsResponse>>
	{
		public EditGetAvailableRefactorings(EditGetAvailableRefactoringsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("editgetFixes")]
	public class EditGetFixes : Request<EditGetFixesRequest, Response<EditGetFixesResponse>>
	{
		public EditGetFixes(EditGetFixesRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("editgetRefactoring")]
	public class EditGetRefactoring : Request<EditGetRefactoringRequest, Response<EditGetRefactoringResponse>>
	{
		public EditGetRefactoring(EditGetRefactoringRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("debugcreateContext")]
	public class DebugCreateContext : Request<DebugCreateContextRequest, Response<DebugCreateContextResponse>>
	{
		public DebugCreateContext(DebugCreateContextRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("debugdeleteContext")]
	public class DebugDeleteContext : Request<DebugDeleteContextRequest, Response>
	{
		public DebugDeleteContext(DebugDeleteContextRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("debugmapUri")]
	public class DebugMapUri : Request<DebugMapUriRequest, Response<DebugMapUriResponse>>
	{
		public DebugMapUri(DebugMapUriRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("debugsetSubscriptions")]
	public class DebugSetSubscriptions : Request<DebugSetSubscriptionsRequest, Response>
	{
		public DebugSetSubscriptions(DebugSetSubscriptionsRequest @params)
			: base(@params)
		{
		}
	}


}