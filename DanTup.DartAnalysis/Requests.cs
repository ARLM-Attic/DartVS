// Code generated by UpdateJson.fsx. Do not hand-edit!

using DanTup.DartAnalysis.Json;

namespace DanTup.DartAnalysis
{
	[AnalysisMethod("server.getVersion")]
	public class ServerGetVersion : Request<Response<ServerGetVersionResponse>>
	{

	}

	[AnalysisMethod("server.shutdown")]
	public class ServerShutdown : Request<Response>
	{

	}

	[AnalysisMethod("server.setSubscriptions")]
	public class ServerSetSubscriptions : Request<ServerSetSubscriptionsRequest, Response>
	{
		public ServerSetSubscriptions(ServerSetSubscriptionsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysis.getErrors")]
	public class AnalysisGetErrors : Request<AnalysisGetErrorsRequest, Response<AnalysisGetErrorsResponse>>
	{
		public AnalysisGetErrors(AnalysisGetErrorsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysis.getHover")]
	public class AnalysisGetHover : Request<AnalysisGetHoverRequest, Response<AnalysisGetHoverResponse>>
	{
		public AnalysisGetHover(AnalysisGetHoverRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysis.reanalyze")]
	public class AnalysisReanalyze : Request<Response>
	{

	}

	[AnalysisMethod("analysis.setAnalysisRoots")]
	public class AnalysisSetAnalysisRoots : Request<AnalysisSetAnalysisRootsRequest, Response>
	{
		public AnalysisSetAnalysisRoots(AnalysisSetAnalysisRootsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysis.setPriorityFiles")]
	public class AnalysisSetPriorityFiles : Request<AnalysisSetPriorityFilesRequest, Response>
	{
		public AnalysisSetPriorityFiles(AnalysisSetPriorityFilesRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysis.setSubscriptions")]
	public class AnalysisSetSubscriptions : Request<AnalysisSetSubscriptionsRequest, Response>
	{
		public AnalysisSetSubscriptions(AnalysisSetSubscriptionsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysis.updateContent")]
	public class AnalysisUpdateContent : Request<AnalysisUpdateContentRequest, Response>
	{
		public AnalysisUpdateContent(AnalysisUpdateContentRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("analysis.updateOptions")]
	public class AnalysisUpdateOptions : Request<AnalysisUpdateOptionsRequest, Response>
	{
		public AnalysisUpdateOptions(AnalysisUpdateOptionsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("completion.getSuggestions")]
	public class CompletionGetSuggestions : Request<CompletionGetSuggestionsRequest, Response<CompletionGetSuggestionsResponse>>
	{
		public CompletionGetSuggestions(CompletionGetSuggestionsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("search.findElementReferences")]
	public class SearchFindElementReferences : Request<SearchFindElementReferencesRequest, Response<SearchFindElementReferencesResponse>>
	{
		public SearchFindElementReferences(SearchFindElementReferencesRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("search.findMemberDeclarations")]
	public class SearchFindMemberDeclarations : Request<SearchFindMemberDeclarationsRequest, Response<SearchFindMemberDeclarationsResponse>>
	{
		public SearchFindMemberDeclarations(SearchFindMemberDeclarationsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("search.findMemberReferences")]
	public class SearchFindMemberReferences : Request<SearchFindMemberReferencesRequest, Response<SearchFindMemberReferencesResponse>>
	{
		public SearchFindMemberReferences(SearchFindMemberReferencesRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("search.findTopLevelDeclarations")]
	public class SearchFindTopLevelDeclarations : Request<SearchFindTopLevelDeclarationsRequest, Response<SearchFindTopLevelDeclarationsResponse>>
	{
		public SearchFindTopLevelDeclarations(SearchFindTopLevelDeclarationsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("search.getTypeHierarchy")]
	public class SearchGetTypeHierarchy : Request<SearchGetTypeHierarchyRequest, Response<SearchGetTypeHierarchyResponse>>
	{
		public SearchGetTypeHierarchy(SearchGetTypeHierarchyRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("edit.getAssists")]
	public class EditGetAssists : Request<EditGetAssistsRequest, Response<EditGetAssistsResponse>>
	{
		public EditGetAssists(EditGetAssistsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("edit.getAvailableRefactorings")]
	public class EditGetAvailableRefactorings : Request<EditGetAvailableRefactoringsRequest, Response<EditGetAvailableRefactoringsResponse>>
	{
		public EditGetAvailableRefactorings(EditGetAvailableRefactoringsRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("edit.getFixes")]
	public class EditGetFixes : Request<EditGetFixesRequest, Response<EditGetFixesResponse>>
	{
		public EditGetFixes(EditGetFixesRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("edit.getRefactoring")]
	public class EditGetRefactoring : Request<EditGetRefactoringRequest, Response<EditGetRefactoringResponse>>
	{
		public EditGetRefactoring(EditGetRefactoringRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("edit.sortMembers")]
	public class EditSortMembers : Request<EditSortMembersRequest, Response<EditSortMembersResponse>>
	{
		public EditSortMembers(EditSortMembersRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("execution.createContext")]
	public class ExecutionCreateContext : Request<ExecutionCreateContextRequest, Response<ExecutionCreateContextResponse>>
	{
		public ExecutionCreateContext(ExecutionCreateContextRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("execution.deleteContext")]
	public class ExecutionDeleteContext : Request<ExecutionDeleteContextRequest, Response>
	{
		public ExecutionDeleteContext(ExecutionDeleteContextRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("execution.mapUri")]
	public class ExecutionMapUri : Request<ExecutionMapUriRequest, Response<ExecutionMapUriResponse>>
	{
		public ExecutionMapUri(ExecutionMapUriRequest @params)
			: base(@params)
		{
		}
	}

	[AnalysisMethod("execution.setSubscriptions")]
	public class ExecutionSetSubscriptions : Request<ExecutionSetSubscriptionsRequest, Response>
	{
		public ExecutionSetSubscriptions(ExecutionSetSubscriptionsRequest @params)
			: base(@params)
		{
		}
	}


}